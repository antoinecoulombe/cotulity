version: '3'

services:
  db_test:
    image: mariadb:10.2
    container_name: db-test
    restart: always
    ports:
      - 4306:3306
    expose:
      - 3306
    command:
      - mysqld
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --max_connections=200
      - --max_allowed_packet=256M
    volumes:
      - ./docker/provision/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - backend
    env_file:
      - ./api/shared/.env
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '--silent']
      interval: 5s
      timeout: 3s
      retries: 10

  api_auth:
    build:
      context: api/
      dockerfile: auth/Dockerfile
    command: 'run start:test'
    container_name: api-auth-test
    restart: always
    ports:
      - 4007:4007
    expose:
      - 4007
    networks:
      - backend
    links:
      - db_test
    depends_on:
      - db_test
    environment:
      PORT: 4007
      DB_HOST: db_test
      DB_PORT: 3306
    healthcheck:
      test: ['CMD', 'curl', '--fail', 'http://localhost:4007']
      interval: 5s
      timeout: 3s
      retries: 10

  api_global:
    build:
      context: api/
      dockerfile: global/Dockerfile
    command: 'run start:test'
    container_name: api-global-test
    restart: always
    ports:
      - 4006:4006
    expose:
      - 4006
    networks:
      - backend
    links:
      - db_test
    depends_on:
      - db_test
      - api_auth
    environment:
      PORT: 4006
      DB_HOST: db_test
      DB_PORT: 3306
    healthcheck:
      test: ['CMD', 'curl', '--fail', 'http://localhost:4006']
      interval: 5s
      timeout: 3s
      retries: 10

  api_groceries:
    build:
      context: api/
      dockerfile: groceries/Dockerfile
    command: 'run start:test'
    container_name: api-groceries-test
    restart: always
    ports:
      - 4001:4001
    expose:
      - 4001
    networks:
      - backend
    links:
      - db_test
    depends_on:
      - db_test
      - api_auth
      - api_global
      - api_homes
    environment:
      PORT: 4001
      DB_HOST: db_test
      DB_PORT: 3306
    healthcheck:
      test: ['CMD', 'curl', '--fail', 'http://localhost:4001']
      interval: 5s
      timeout: 3s
      retries: 10

  api_homes:
    build:
      context: api/
      dockerfile: homes/Dockerfile
    command: 'run start:test'
    container_name: api-homes-test
    restart: always
    ports:
      - 4002:4002
    expose:
      - 4002
    networks:
      - backend
    links:
      - db_test
    depends_on:
      - db_test
      - api_auth
      - api_global
    environment:
      PORT: 4002
      DB_HOST: db_test
      DB_PORT: 3306
    healthcheck:
      test: ['CMD', 'curl', '--fail', 'http://localhost:4002']
      interval: 5s
      timeout: 3s
      retries: 10

  api_tasks:
    build:
      context: api/
      dockerfile: tasks/Dockerfile
    command: 'run start:test'
    container_name: api-tasks-test
    restart: always
    ports:
      - 4003:4003
    expose:
      - 4003
    networks:
      - backend
    links:
      - db_test
    depends_on:
      - db_test
      - api_auth
      - api_global
      - api_homes
    environment:
      PORT: 4003
      DB_HOST: db_test
      DB_PORT: 3306
    healthcheck:
      test: ['CMD', 'curl', '--fail', 'http://localhost:4003']
      interval: 5s
      timeout: 3s
      retries: 10

  api_accounts:
    build:
      context: api/
      dockerfile: accounts/Dockerfile
    command: 'run start:test'
    container_name: api-accounts-test
    restart: always
    ports:
      - 4004:4004
    expose:
      - 4004
    networks:
      - backend
    links:
      - db_test
    depends_on:
      - db_test
      - api_auth
      - api_global
      - api_homes
    environment:
      PORT: 4004
      DB_HOST: db_test
      DB_PORT: 3306
    healthcheck:
      test: ['CMD', 'curl', '--fail', 'http://localhost:4004']
      interval: 5s
      timeout: 3s
      retries: 10

  api_calendar:
    build:
      context: api/
      dockerfile: calendar/Dockerfile
    command: 'run start:test'
    container_name: api-calendar-test
    restart: always
    ports:
      - 4005:4005
    expose:
      - 4005
    networks:
      - backend
    links:
      - db_test
    depends_on:
      - db_test
      - api_auth
      - api_global
      - api_homes
    environment:
      PORT: 4005
      DB_HOST: db_test
      DB_PORT: 3306
    healthcheck:
      test: ['CMD', 'curl', '--fail', 'http://localhost:4005']
      interval: 5s
      timeout: 3s
      retries: 10

  api_test:
    build:
      context: api/
      dockerfile: test/Dockerfile
    container_name: api-test
    ports:
      - 4099:4099
    expose:
      - 4099
    networks:
      - backend
    links:
      - db_test
    depends_on:
      db_test:
        condition: service_healthy
      api_auth:
        condition: service_healthy
      api_global:
        condition: service_healthy
      api_homes:
        condition: service_healthy
      api_tasks:
        condition: service_healthy
      api_groceries:
        condition: service_healthy
      api_calendar:
        condition: service_healthy
      api_accounts:
        condition: service_healthy
    environment:
      PORT: 4099
      DB_HOST: db_test
      DB_PORT: 3306
      IP_AUTH: api_auth
      PORT_AUTH: 4007
      IP_GLOBAL: api_global
      PORT_GLOBAL: 4006
      IP_GROCERIES: api_groceries
      PORT_GROCERIES: 4001
      IP_HOMES: api_homes
      PORT_HOMES: 4002
      IP_TASKS: api_tasks
      PORT_TASKS: 4003
      IP_ACCOUNTS: api_accounts
      PORT_ACCOUNTS: 4004
      IP_CALENDAR: api_calendar
      PORT_CALENDAR: 4005

volumes:
  db_test:
    driver: local

networks:
  backend:
    driver: bridge
