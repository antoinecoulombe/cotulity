events {}
http {
  server {
    listen 4000;

    location / {
      auth_request      /auth;
      auth_request_set  $auth_status $upstream_status;
      proxy_pass        http://host.docker.internal:3000; #http://api_global:3000
    }

    location /groceries/ {
      auth_request      /auth;
      auth_request_set  $auth_status $upstream_status;
      proxy_pass        http://host.docker.internal:3001; #http://api_groceries:3001
    }

    location /home {
      auth_request      /auth;
      auth_request_set  $auth_status $upstream_status;
      proxy_pass        http://host.docker.internal:3002; #http://api_homes:3002
    }

    location /homes {
      auth_request      /auth;
      auth_request_set  $auth_status $upstream_status;
      proxy_pass        http://host.docker.internal:3002; #http://api_homes:3002
    }

    location /tasks/ {
      auth_request      /auth;
      auth_request_set  $auth_status $upstream_status;
      proxy_pass        http://host.docker.internal:3003; #http://api_tasks:3003
    }

    # profile picture upload
    location = /users/current/picture {
      auth_request      /auth;
      auth_request_set  $auth_status $upstream_status;
      proxy_request_buffering off;
      proxy_pass        http://host.docker.internal:3000; #http://api_global:3000
    }

    location = /auth {
      # Simple requests
      if ($request_method ~* "(GET|POST|PUT|DELETE)") {
        add_header "Access-Control-Allow-Origin" *;
      }

      # # Preflighted requests
      if ($request_method = OPTIONS ) {
        add_header "Access-Control-Allow-Origin" *;
        add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
        add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept, User-Agent, Keep-Alive, Host, X-Original-URI, X-Original-Remote-Addr, X-Original-Host, Host";
        return 200;
      }

      internal;
      proxy_pass              http://host.docker.internal:2999/auth;
      proxy_pass_request_body off;
      proxy_intercept_errors  off;

      proxy_set_header        Content-Length "";
      proxy_set_header        Host $host;
      proxy_set_header        X-Original-URI $request_uri;
      proxy_set_header        X-Original-Remote-Addr $remote_addr;
      proxy_set_header        X-Original-Host $host;
    }

    # error_page 500 /500.json;
    # location /500.json {
    #     internal;
    #     return 500 '{"title":"request.error",msg:"request.error","error":{"code":500,"message":"Internal Server Error"}}';
    # }
    
    # error_page 502 /502.json;
    # location /502.json {
    #     internal;
    #     return 502 '{"title":"request.error",msg:"request.error","error":{"code":502,"message":"Bad Gateway"}}';
    # }
    
    # error_page 503 /503.json;
    # location /503.json {
    #     internal;
    #     return 503 '{"title":"request.error",msg:"request.error","error":{"code":503,"message":"Service Temporarily Unavailable"}}';
    # }
    
    # error_page 504 /504.json;
    # location /504.json {
    #     internal;
    #     return 504 '{"title":"request.error",msg:"request.error","error":{"code":504,"message":"Gateway Timeout"}}';
    # }
    
    # error_page 400 /400.json;
    # location /400.json {
    #     internal;
    #     return 400 '{"title":"request.error",msg:"request.error","error":{"code":400,"message":"Bad Request"}}';
    # }
    
    error_page 401 /401.json;
    location /401.json {
        internal;
        add_header 'Content-Type' 'application/json charset=UTF-8';
        return 401 '{"title":"request.denied","msg":"request.unauthorized"}';
    }
    
    error_page 403 /403.json;
    location /403.json {
        internal;
        return 403 '{"title":"request.denied","msg":"request.unauthorized"}';
    }
    
    # error_page 404 /404.json;
    # location /404.json {
    #     internal;
    #     return 404 '{"title":"request.notFound",msg:"request.notFound","error":{"code":404,"message":"Not Found"}}';
    # }
    
    # error_page 408 /408.json;
    # location /408.json {
    #     internal;
    #     return 408 '{"title":"request.error",msg:"request.error","error":{"code":408,"message":"Request Timeout"}}';
    # }
    
    # error_page 418 /418.json;
    # location /418.json {
    #     internal;
    #     return 418 '{"title":"request.error",msg:"request.error","error":{"code":418,"message":"I\'m a teapot"}}';
    # }
  }
}